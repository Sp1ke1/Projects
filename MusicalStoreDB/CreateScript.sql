-- Generated by Oracle SQL Developer Data Modeler 19.2.0.182.1216
--   at:        2020-05-10 15:19:51 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

prompt #---------------------#
prompt #- Pomocne procedury -#
prompt #---------------------#

create or replace procedure SMAZ_VSECHNY_TABULKY AS
-- pokud v logu bude uvedeno, ze nektery objekt nebyl zrusen, protoze na nej jiny jeste existujici objekt stavi, spust proceduru opakovane, dokud se nezrusi vse
begin
  for iRec in 
    (select distinct OBJECT_TYPE, OBJECT_NAME,
      'drop '||OBJECT_TYPE||' "'||OBJECT_NAME||'"'||
      case OBJECT_TYPE when 'TABLE' then ' cascade constraints purge' else ' ' end as PRIKAZ
    from USER_OBJECTS where OBJECT_NAME not in ('SMAZ_VSECHNY_TABULKY', 'VYPNI_CIZI_KLICE', 'ZAPNI_CIZI_KLICE', 'VYMAZ_DATA_VSECH_TABULEK')
    ) loop
        begin
          dbms_output.put_line('Prikaz: '||irec.prikaz);
        execute immediate iRec.prikaz;
        exception
          when others then dbms_output.put_line('NEPOVEDLO SE!');
        end;
      end loop;
end;
/

create or replace procedure VYPNI_CIZI_KLICE as 
begin
  for cur in (select CONSTRAINT_NAME, TABLE_NAME from USER_CONSTRAINTS where CONSTRAINT_TYPE = 'R' ) 
  loop
    execute immediate 'alter table '||cur.TABLE_NAME||' modify constraint "'||cur.CONSTRAINT_NAME||'" DISABLE';
  end loop;
end VYPNI_CIZI_KLICE;
/


create or replace procedure ZAPNI_CIZI_KLICE as 
begin
  for cur in (select CONSTRAINT_NAME, TABLE_NAME from USER_CONSTRAINTS where CONSTRAINT_TYPE = 'R' ) 
  loop
    execute immediate 'alter table '||cur.TABLE_NAME||' modify constraint "'||cur.CONSTRAINT_NAME||'" enable validate';
  end loop;
end ZAPNI_CIZI_KLICE;
/

create or replace procedure VYMAZ_DATA_VSECH_TABULEK is
begin
  -- Vymazat data vsech tabulek
  VYPNI_CIZI_KLICE;
  for v_rec in (select distinct TABLE_NAME from USER_TABLES)
  loop
    execute immediate 'truncate table '||v_rec.TABLE_NAME||' drop storage';
  end loop;
  ZAPNI_CIZI_KLICE;
  
  -- Nastavit vsechny sekvence od 1
  for v_rec in (select distinct SEQUENCE_NAME  from USER_SEQUENCES)
  loop
    execute immediate 'alter sequence '||v_rec.SEQUENCE_NAME||' restart start with 1';
  end loop;
end VYMAZ_DATA_VSECH_TABULEK;
/

prompt #------------------------#
prompt #- Zrusit stare tabulky -#
prompt #------------------------#

exec SMAZ_VSECHNY_TABULKY;

prompt #-------------------------#
prompt #- Vytvorit nove tabulky -#
prompt #-------------------------#



CREATE TABLE adresa (
    id_adresa   INTEGER NOT NULL,
    id_stat     INTEGER NOT NULL,
    ulice       VARCHAR2(100),
    cislo       VARCHAR2(30) NOT NULL,
    mesto       VARCHAR2(100) NOT NULL,
    psc         VARCHAR2(30)
);

ALTER TABLE adresa ADD CONSTRAINT pk_adresa PRIMARY KEY ( id_adresa );

CREATE TABLE kredit (
    id_kredit          INTEGER NOT NULL,
    id_objednavka      INTEGER NOT NULL,
    id_zakaznik        INTEGER NOT NULL,
    id_zamestnanec     INTEGER NOT NULL,
    celkova_castka     NUMBER(18, 2) NOT NULL,
    uhrazena_castka    NUMBER(18, 2) NOT NULL,
    datum_splatnosti   DATE NOT NULL
);

CREATE UNIQUE INDEX ix_kredit_ ON
    kredit (
        id_objednavka
    ASC );

ALTER TABLE kredit ADD CONSTRAINT pk_kredit PRIMARY KEY ( id_kredit );

CREATE TABLE nastroj (
    id_nastroj    INTEGER NOT NULL,
    id_vyrobce    INTEGER NOT NULL,
    id_oddeleni   INTEGER NOT NULL,
    nazev         VARCHAR2(100) NOT NULL,
    model         VARCHAR2(100),
    rok_vyroby    INTEGER,
    cena          NUMBER(18, 2) NOT NULL
);

ALTER TABLE nastroj ADD CONSTRAINT pk_nastroj PRIMARY KEY ( id_nastroj );

CREATE TABLE nastroj_objednavka (
    id_nastroj      INTEGER NOT NULL,
    id_objednavka   INTEGER NOT NULL
);

ALTER TABLE nastroj_objednavka ADD CONSTRAINT pk_nastroj_objednavka PRIMARY KEY ( id_nastroj,
                                                                                  id_objednavka );

CREATE TABLE objednavka (
    id_objednavka    INTEGER NOT NULL,
    id_zamestnanec   INTEGER NOT NULL,
    id_zakaznik      INTEGER NOT NULL,
    cena             NUMBER(18, 2) NOT NULL,
    datum            DATE NOT NULL
);

ALTER TABLE objednavka ADD CONSTRAINT pk_objednavka PRIMARY KEY ( id_objednavka );

CREATE TABLE oddeleni (
    id_oddeleni   INTEGER NOT NULL,
    nazev         VARCHAR2(100) NOT NULL
);

ALTER TABLE oddeleni ADD CONSTRAINT pk_oddeleni PRIMARY KEY ( id_oddeleni );

CREATE TABLE stat (
    id_stat   INTEGER NOT NULL,
    nazev     VARCHAR2(100) NOT NULL
);

ALTER TABLE stat ADD CONSTRAINT pk_stat PRIMARY KEY ( id_stat );

CREATE TABLE vyrobce (
    id_vyrobce    INTEGER NOT NULL,
    id_stat       INTEGER NOT NULL,
    nazev_firmy   VARCHAR2(100) NOT NULL
);

ALTER TABLE vyrobce ADD CONSTRAINT pk_vyrobce PRIMARY KEY ( id_vyrobce );

CREATE TABLE zakaznik (
    id_zakaznik   INTEGER NOT NULL,
    id_adresa     INTEGER NOT NULL,
    jmeno         VARCHAR2(100),
    prijmeni      VARCHAR2(100)
);

ALTER TABLE zakaznik ADD CONSTRAINT pk_zakaznik PRIMARY KEY ( id_zakaznik );

CREATE TABLE zamestnanec (
    id_zamestnanec    INTEGER NOT NULL,
    id_oddeleni       INTEGER NOT NULL,
    jmeno             VARCHAR2(100) NOT NULL,
    prijmeni          VARCHAR2(100) NOT NULL,
    telefonni_cislo   VARCHAR2(100)
);

ALTER TABLE zamestnanec ADD CONSTRAINT pk_zamestnanec PRIMARY KEY ( id_zamestnanec );

ALTER TABLE adresa
    ADD CONSTRAINT fk_adresa_stat FOREIGN KEY ( id_stat )
        REFERENCES stat ( id_stat );

ALTER TABLE kredit
    ADD CONSTRAINT fk_kredit_objednavka FOREIGN KEY ( id_objednavka )
        REFERENCES objednavka ( id_objednavka );

ALTER TABLE kredit
    ADD CONSTRAINT fk_kredit_zakaznik FOREIGN KEY ( id_zakaznik )
        REFERENCES zakaznik ( id_zakaznik );

ALTER TABLE kredit
    ADD CONSTRAINT fk_kredit_zamestnanec FOREIGN KEY ( id_zamestnanec )
        REFERENCES zamestnanec ( id_zamestnanec );

ALTER TABLE nastroj_objednavka
    ADD CONSTRAINT fk_nastroj FOREIGN KEY ( id_nastroj )
        REFERENCES nastroj ( id_nastroj );

ALTER TABLE nastroj
    ADD CONSTRAINT fk_nastroj_oddeleni FOREIGN KEY ( id_oddeleni )
        REFERENCES oddeleni ( id_oddeleni );

ALTER TABLE nastroj
    ADD CONSTRAINT fk_nastroj_vyrobce FOREIGN KEY ( id_vyrobce )
        REFERENCES vyrobce ( id_vyrobce );

ALTER TABLE nastroj_objednavka
    ADD CONSTRAINT fk_objednavka FOREIGN KEY ( id_objednavka )
        REFERENCES objednavka ( id_objednavka );

ALTER TABLE objednavka
    ADD CONSTRAINT fk_objednavka_zakaznik FOREIGN KEY ( id_zakaznik )
        REFERENCES zakaznik ( id_zakaznik );

ALTER TABLE objednavka
    ADD CONSTRAINT fk_objednavka_zamestnanec FOREIGN KEY ( id_zamestnanec )
        REFERENCES zamestnanec ( id_zamestnanec );

ALTER TABLE vyrobce
    ADD CONSTRAINT fk_vyrobce_stat FOREIGN KEY ( id_stat )
        REFERENCES stat ( id_stat );

ALTER TABLE zakaznik
    ADD CONSTRAINT fk_zakaznik_adresa FOREIGN KEY ( id_adresa )
        REFERENCES adresa ( id_adresa );

ALTER TABLE zamestnanec
    ADD CONSTRAINT fk_zamestnanec_oddeleni FOREIGN KEY ( id_oddeleni )
        REFERENCES oddeleni ( id_oddeleni );

CREATE SEQUENCE seq_id_adresa START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER trg_id_adresa BEFORE
    INSERT ON adresa
    FOR EACH ROW
    WHEN ( new.id_adresa IS NULL )
BEGIN
    :new.id_adresa := seq_id_adresa.nextval;
END;
/

CREATE SEQUENCE seq_id_kredit START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER trg_id_kredit BEFORE
    INSERT ON kredit
    FOR EACH ROW
    WHEN ( new.id_kredit IS NULL )
BEGIN
    :new.id_kredit := seq_id_kredit.nextval;
END;
/

CREATE SEQUENCE seq_id_nastroj START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER trg_id_nastroj BEFORE
    INSERT ON nastroj
    FOR EACH ROW
    WHEN ( new.id_nastroj IS NULL )
BEGIN
    :new.id_nastroj := seq_id_nastroj.nextval;
END;
/

CREATE SEQUENCE seq_id_objednavka START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER trg_id_objednavka BEFORE
    INSERT ON objednavka
    FOR EACH ROW
    WHEN ( new.id_objednavka IS NULL )
BEGIN
    :new.id_objednavka := seq_id_objednavka.nextval;
END;
/

CREATE SEQUENCE seq_id_oddeleni START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER trg_id_oddeleni BEFORE
    INSERT ON oddeleni
    FOR EACH ROW
    WHEN ( new.id_oddeleni IS NULL )
BEGIN
    :new.id_oddeleni := seq_id_oddeleni.nextval;
END;
/

CREATE SEQUENCE seq_id_stat START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER trg_id_stat BEFORE
    INSERT ON stat
    FOR EACH ROW
    WHEN ( new.id_stat IS NULL )
BEGIN
    :new.id_stat := seq_id_stat.nextval;
END;
/

CREATE SEQUENCE seq_id_vyrobce START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER trg_id_vyrobce BEFORE
    INSERT ON vyrobce
    FOR EACH ROW
    WHEN ( new.id_vyrobce IS NULL )
BEGIN
    :new.id_vyrobce := seq_id_vyrobce.nextval;
END;
/

CREATE SEQUENCE seq_id_zakaznik START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER trg_id_zakaznik BEFORE
    INSERT ON zakaznik
    FOR EACH ROW
    WHEN ( new.id_zakaznik IS NULL )
BEGIN
    :new.id_zakaznik := seq_id_zakaznik.nextval;
END;
/

CREATE SEQUENCE seq_id_zamestnanec START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER trg_id_zamestnanec BEFORE
    INSERT ON zamestnanec
    FOR EACH ROW
    WHEN ( new.id_zamestnanec IS NULL )
BEGIN
    :new.id_zamestnanec := seq_id_zamestnanec.nextval;
END;
/







-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             9
-- CREATE INDEX                             1
-- ALTER TABLE                             21
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           8
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          8
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
